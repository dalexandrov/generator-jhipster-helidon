
package <%=packageName%>.domain;

<%_ if (databaseType === 'mongodb') { _%>

<%_ } _%>
import java.io.Serializable;
import java.util.Objects;
<%_ if (databaseType === 'sql') { _%>
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
<%_ } _%>
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
<%_ if (enableHibernateCache) { _%>
import javax.persistence.*;
<%_ } _%>

/**
 * An authority (a security role).
 */
<%_ if (databaseType === 'sql') { _%>
@Entity
@Table(name = "<%= jhiTablePrefix %>_authority")
<%_ if (enableHibernateCache) { _%>
@Cacheable
<%_ } _%>
<%_ } else if (databaseType === 'mongodb') { _%>

<%_ } _%>
public class Authority implements Serializable {
    private static final long serialVersionUID = 1L;

    @NotNull
    @Size(max = 50)
<%_ if (databaseType === 'sql') { _%>
    @Id
    @Column(length = 50)
<%_ } _%>
<%_ if (databaseType === 'mongodb') { _%>

<%_ } _%>
    public String name;

    public Authority() {
        //empty
    }

    public Authority(String name) {
        //for jsonb
        this.name = name;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof Authority)) {
            return false;
        }
        return Objects.equals(name, ((Authority) o).name);
    }

    @Override
    public int hashCode() {
        return Objects.hashCode(name);
    }

    @Override
    public String toString() {
        return "Authority{" + "name='" + name + '\'' + "}";
    }
}
