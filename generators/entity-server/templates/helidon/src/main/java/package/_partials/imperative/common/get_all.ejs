
    <%_ if (databaseType === 'sql' && fieldsContainOwnerManyToMany && !viaService) { _%>
    @Transactional
    <%_ } _%>
    <%_ { _%>
    public List<<%= entityOrDtoClass %>> getAll<%= entityClassPlural %>(<% if (fieldsContainNoOwnerOneToOne) { %>@RequestParam(required = false) String filter<% } %><% if (fieldsContainOwnerManyToMany && fieldsContainNoOwnerOneToOne) { %>,<% } %><% if (fieldsContainOwnerManyToMany) { %>@QueryParam(value = "eagerload") boolean eagerload<% }%>) {
        log.debug("REST request to get all <%= entityClassPlural %>");
        <%_ if (viaService) { _%>
        return <%= entityInstance %>Service.findAll();
        <%_ } else if (hasDto) { _%>
        List<<%= entityClass %>> <%= entityInstancePlural %> = <%= dataAccessObject %>.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships()<% } else { %>findAll()<% } %>.list();
        return <%= mapper %>.toDto(<%= entityInstancePlural %>);
        <%_ } else { _%>
        return <%= dataAccessObject %>.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships()<% } else { %>findAll()<% } %>.list();
        <%_ } _%>
    }
    <%_ } _%>
