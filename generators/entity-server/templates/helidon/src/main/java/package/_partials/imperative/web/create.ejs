
    /**
     * {@code POST  /<%= entityApiUrl %>} : Create a new <%= entityInstance %>.
     *
     * @param <%= entityOrDtoInstance %> the <%= entityOrDtoInstance %> to create.
     * @return the {@link Response} with status {@code 201 (Created)} and with body the new <%= entityOrDtoInstance %>, or with status {@code 400 (Bad Request)} if the <%= entityInstance %> has already an ID.
     */
    @POST
    <%_ if (databaseType === 'sql' && !viaService) { _%>
    @Transactional
    <%_ } _%>
    public Response create<%= entityClass %>(<% if (validation) { %>@Valid <% } %><%= entityOrDtoClass %> <%= entityOrDtoInstance %>, @Context UriInfo uriInfo) {
        log.debug("REST request to save <%= entityClass %> : {}", <%= entityOrDtoInstance %>);
        if (<%= entityOrDtoInstance %>.id != null) {
            throw new BadRequestAlertException("A new <%= entityInstance %> cannot already have an ID", ENTITY_NAME, "idexists");
        }

<%- include('../common/save', {...this, returnDirectly: false, isController: true}); -%>
        <%_ if (databaseType === 'mongodb' && !viaService) { _%>
        <%= entityClass %> result = <%= entityClass %>.findById(<%= entityOrDtoInstance %>.id);
        <%_ } _%>
        var response = Response.created(fromPath(uriInfo.getPath()).path(result.id<% if (pkType !== 'String') { %>.toString()<% } %>).build()).entity(result);
        HeaderUtil.createEntityCreationAlert(applicationName, <%= enableTranslation %>, ENTITY_NAME, result.id<% if (pkType !== 'String') { %>.toString()<% } %>).forEach(response::header);
        return response.build();
    }
