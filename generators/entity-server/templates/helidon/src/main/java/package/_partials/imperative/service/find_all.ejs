
    /**
     * Get all the <%= entityInstancePlural %>.
    <%_ if (hasServiceImpl) { _%>
    @Override
    <%_ } _%>
    <%_ if (databaseType === 'sql' && isUsingMapsId === true) { _%>
    @Transactional(readOnly = true)
    <%_ } _%>
    public List<<%= entityOrDtoClass %>> findAll() {
        log.debug("Request to get all <%= entityClassPlural %>");
            <%_ if(hasDto) { _%>
        List<<%=entityClass %>> <%= entityInstancePlural %> = <%= dataAccessObject %>.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships()<% } else { %>findAll()<% } %>.list();
        return <%= mapper %>.toDto(<%= entityInstancePlural %>);
            <%_ } else { _%>
            return <%= dataAccessObject %>.<% if (fieldsContainOwnerManyToMany) { %>findAllWithEagerRelationships()<% } else { %>findAll()<% } %>.list();
            <%_ } _%>
    }

    <%_ if (fieldsContainOwnerManyToMany === true) { _%>

    /**
     * Get all the <%= entityInstancePlural %> with eager load of many-to-many relationships.
     * @return the list of entities.
     */
    public List<<%= entityOrDtoClass %>> findAllWithEagerRelationships() {
            <%_ if(hasDto) { _%>
        List<<%=entityClass %>> = <%= dataAccessObject %>.findAllWithEagerRelationships().list();
        return <%= mapper %>.toDto();
            <%_ } else {_%>
        return <%= dataAccessObject %>.findAllWithEagerRelationships().list();
            <%_ } _%>

    }
    <%_ } _%>
