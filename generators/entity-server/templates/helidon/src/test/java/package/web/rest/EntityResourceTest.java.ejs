
package <%=packageName%>.web.rest;

<%- include('../../_partials/imports', this); -%>

@HelidonTest
public class <%= entityClass%>ResourceTest {

    private static final TypeRef<<%= entityOrDtoClass%>> ENTITY_TYPE = new TypeRef<>() {
    };

    private static final TypeRef<List<<%= entityOrDtoClass%>>> LIST_OF_ENTITY_TYPE = new TypeRef<>() {
    };

<%- include('../../_partials/defaults', this); -%>

    String adminToken;

    <%= entityOrDtoClass %> <%= entityOrDtoInstance %>;


    @BeforeAll
    static void jsonMapper() {
        RestAssured.config =
            RestAssured.config().objectMapperConfig(objectMapperConfig().defaultObjectMapper(TestUtil.jsonbObjectMapper()));
    }

    @BeforeEach
    public void authenticateAdmin() {
        this.adminToken = TestUtil.getAdminToken();
    }

    /**
     * Create an entity for this test.
     * <p>
     * This is a static method, as tests for other entities might also need it,
     * if they test an entity which requires the current entity.
     */
    public static <%= entityOrDtoClass %> createEntity() {
        var <%= entityOrDtoInstance %> = new <%= entityOrDtoClass %>();
        <%_ for (let idx = 0; idx < fields.length; idx++) { _%>
        <%= entityOrDtoInstance %>.<%= fields[idx].fieldName %> = DEFAULT_<%= fields[idx].fieldNameUnderscored.toUpperCase(); %>;
        <%_ } _%>
        return <%= entityOrDtoInstance %>;
    }

    @BeforeEach
    public void initTest() {
        <%= entityOrDtoInstance %> = createEntity();
    }

    <%_ if (!readOnly) { _%>
<%- include('../../_partials/create', this); -%>

<%- include('../../_partials/create_with_field_required', this); -%>

<%- include('../../_partials/update', this); -%>

<%- include('../../_partials/delete', this); -%>

    <%_ } _%>
<%- include('../../_partials/get_all', this); -%>

<%- include('../../_partials/get', this); -%>
}
